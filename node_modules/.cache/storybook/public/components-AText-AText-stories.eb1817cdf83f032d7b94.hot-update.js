"use strict";
self["webpackHotUpdateanymator"]("components-AText-AText-stories",{

/***/ "./src/components/AText/AText.stories.ts":
/*!***********************************************!*\
  !*** ./src/components/AText/AText.stories.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClickMe": () => (/* binding */ ClickMe),
/* harmony export */   "Large": () => (/* binding */ Large),
/* harmony export */   "Small": () => (/* binding */ Small),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "animtion": () => (/* binding */ animtion),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _AText__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AText */ "./src/components/AText/AText.tsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module './Scss/index.scss'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
const meta = {
  title: 'Anymator/Button',
  component: _AText__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ['autodocs']
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const animtion = {
  args: {
    label: 'Hello world'
  }
};
const ClickMe = {
  args: {
    label: 'Click me!'
  }
};
const Large = {
  args: {
    label: 'AText'
  }
};
const Small = {
  args: {
    label: 'AText'
  }
};
animtion.parameters = {
  ...animtion.parameters,
  docs: {
    ...animtion.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Hello world'\n  }\n}",
      ...animtion.parameters?.docs?.source
    }
  }
};
ClickMe.parameters = {
  ...ClickMe.parameters,
  docs: {
    ...ClickMe.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Click me!'\n  }\n}",
      ...ClickMe.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'AText'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'AText'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["animtion", "ClickMe", "Large", "Small"];

/***/ })

});