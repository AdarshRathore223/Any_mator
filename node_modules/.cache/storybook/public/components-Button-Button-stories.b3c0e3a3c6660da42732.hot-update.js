"use strict";
self["webpackHotUpdateanymator"]("components-Button-Button-stories",{

/***/ "./src/components/Button/Button.stories.tsx":
/*!**************************************************!*\
  !*** ./src/components/Button/Button.stories.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClickMe": () => (/* binding */ ClickMe),
/* harmony export */   "HelloWorld": () => (/* binding */ HelloWorld),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ "./src/components/Button/Button.tsx");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction
const meta = {
  title: 'ReactComponentLibrary/Button',
  component: _Button__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ['autodocs']
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const HelloWorld = {
  args: {
    label: 'Hello world'
  }
};
const ClickMe = {
  args: {
    label: 'Click me!'
  }
};
HelloWorld.parameters = {
  ...HelloWorld.parameters,
  docs: {
    ...HelloWorld.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Hello world'\n  }\n}",
      ...HelloWorld.parameters?.docs?.source
    }
  }
};
ClickMe.parameters = {
  ...ClickMe.parameters,
  docs: {
    ...ClickMe.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Click me!'\n  }\n}",
      ...ClickMe.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["HelloWorld", "ClickMe"];

/***/ }),

/***/ "./src/components/Button/Button.tsx":
/*!******************************************!*\
  !*** ./src/components/Button/Button.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const Button = props => {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button", {
    children: props.label
  });
};
Button.displayName = "Button";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
try {
    // @ts-ignore
    Button.displayName = "Button";
    // @ts-ignore
    Button.__docgenInfo = { "description": "", "displayName": "Button", "props": { "label": { "defaultValue": null, "description": "", "name": "label", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"] = { docgenInfo: Button.__docgenInfo, name: "Button", path: "src/components/Button/Button.tsx#Button" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=components-Button-Button-stories.b3c0e3a3c6660da42732.hot-update.js.map